{"version":3,"sources":["components/GoogleAuth/GoogleAuth.tsx","actions/index.tsx","actions/actionTypes.tsx","components/Header/Header.tsx","routes/TaskList/TaskList.tsx","routes/TaskCreate/TaskCreate.tsx","routes/TaskEdit/TaskEdit.tsx","routes/TaskDelete/TaskDelete.tsx","components/App/App.tsx","reducers/authReducers.tsx","reducers/index.tsx","index.tsx"],"names":["GoogleAuth","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onAuthChange","isSignedIn","signIn","assertThisInitialized","auth","currentUser","get","getId","signOut","onSignInClick","onSignOutClick","renderAuthButton","react_default","a","createElement","type","className","onClick","react_fontawesome_index_es","icon","_this2","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","data-test","Component","connect","state","userId","payload","Header","react_router_dom","to","components_GoogleAuth_GoogleAuth","TaskList","TaskCreate","TaskEdit","TaskDelete","library","add","fab","App","components_Header_Header","react_router","path","exact","component","INITIAL_STATE","combineReducers","arguments","length","undefined","action","objectSpread","store","createStore","reducers","ReactDOM","render","es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.a5778dd9.chunk.js","sourcesContent":["import './GoogleAuth.css';\nimport React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { connect } from 'react-redux';\n\nimport { signIn, signOut } from '../../actions';\n\nclass GoogleAuth extends Component<any, any>{\n    constructor(props: any){\n        super(props);\n    }\n\n\n    componentDidMount(){\n        (window as any).gapi.load('client:auth2', () => {\n            (window as any).gapi.client.init({\n                clientId: '772153906024-kqav17gnbk89ec6uflarepkiq2knei0q.apps.googleusercontent.com',\n                scope: 'email'\n            }).then(() => {\n                (this as any).auth = (window as any).gapi.auth2.getAuthInstance();\n                this.onAuthChange((this as any).auth.isSignedIn.get());\n                (this as any).auth.isSignedIn.listen(this.onAuthChange);\n            });\n        });\n    }\n\n    onAuthChange = (isSignedIn: boolean) => {\n        if(isSignedIn) {\n            this.props.signIn((this as any).auth.currentUser.get().getId());\n        } else {\n            this.props.signOut();\n        }\n    }\n\n    onSignInClick = () => {\n        (this as any).auth.signIn();\n    }\n\n    onSignOutClick = () => {\n        (this as any).auth.signOut();\n    }\n\n    renderAuthButton = () => {\n        if(this.props.isSignedIn === null) {\n            return null;\n        } else if(this.props.isSignedIn) {\n            return (\n                <button \n                    type=\"button\" \n                    className=\"btn btn-primary\" \n                    onClick={this.onSignOutClick}\n                >\n                    {/* <FontAwesomeIcon icon={['fab', 'google']} className=\"icon-spacing\" /> */}\n                    Sign Out\n                </button>\n            )\n        } else {\n            return (\n                <button \n                    type=\"button\" \n                    className=\"btn btn-danger\"\n                    onClick={this.onSignInClick}\n                >\n                    <FontAwesomeIcon icon={['fab', 'google']} className=\"icon-spacing\" />\n                    Sign in with Google\n                </button>\n            )\n        }\n    }\n\n    render(){\n        return (\n            <div data-test=\"component-google-auth\">\n                {this.renderAuthButton()}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: { auth: { isSignedIn: null | boolean } }) => {\n    return { isSignedIn: state.auth.isSignedIn }\n}\n\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);","import { SIGN_IN, SIGN_OUT } from './actionTypes';\n\nexport const signIn: (userId: string) => { type: string, payload: string } = (userId: string) => {\n    return {\n        type: SIGN_IN,\n        payload: userId\n    };\n};\n\nexport const signOut: () => { type: string } = () => {\n    return {\n        type: SIGN_OUT\n    };\n};\n\n","export const SIGN_IN: string = 'SIGN_IN';\nexport const SIGN_OUT: string = 'SIGN_OUT';","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport GoogleAuth from \"../GoogleAuth/GoogleAuth\";\n\n\nconst Header = () => {\n    return (\n        <div data-test=\"component-header\" className=\"container-fluid bg-dark\">\n            <nav className=\"navbar navbar-dark\">\n                <Link data-test=\"nav-logo-link\" className=\"navbar-brand\" to=\"/\" >Goal List</Link>\n                <GoogleAuth />\n            </nav>\n        </div>\n    )\n}\n\nexport default Header;","import React, { Component } from \"react\";\n\nconst TaskList = () => {\n    return <div>Task List</div>;\n}\n\nexport default TaskList;","import React, { Component } from \"react\";\n\nconst TaskCreate = () => {\n    return <div data-test=\"route-task-create\">Create New Task</div>\n}\n\nexport default TaskCreate;","import React, { Component } from \"react\";\n\nconst TaskEdit = () => {\n    return <div>TaskEdit</div>;\n}\n\nexport default TaskEdit;","import React, { Component } from \"react\";\n\nconst TaskDelete = () => {\n    return <div>Delete a task</div>\n}\n\nexport default TaskDelete;","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\n\nimport Header from '../Header/Header';\nimport TaskList from '../../routes/TaskList/TaskList';\nimport TaskCreate from '../../routes/TaskCreate/TaskCreate';\nimport TaskEdit from '../../routes/TaskEdit/TaskEdit';\nimport TaskDelete from '../../routes/TaskDelete/TaskDelete';\n\nlibrary.add(fab);\n\nconst App = () => {\n\n\n    return (\n        <div data-test=\"component-app\">\n            <Router>\n                <div>\n                    <Header />\n                    <Switch>\n                        <Route path=\"/\" exact component={TaskList} />\n                        {/* above path will be a main task list - adding an 'id' should trigger one of any sub lists */}\n                        <Route path=\"/tasks/new\" exact component={TaskCreate} />\n                        <Route path=\"/tasks/edit\" exact component={TaskEdit} />\n                        <Route path=\"/tasks/delete\" exact component={TaskDelete} />\n                        {/* Eventually add a page not found route */}\n                        {/* <Route component={NotFoundPage} /> */}\n                    </Switch>\n                </div>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;","import { SIGN_IN, SIGN_OUT } from '../actions/actionTypes';\n\nconst INITIAL_STATE: { isSignedIn: null | boolean, userId: null | string } = {\n    isSignedIn: null,\n    userId: null\n}\n\nexport default (state = INITIAL_STATE, action: {type: string, payload: string}) => {\n    switch (action.type) {\n        case SIGN_IN:\n            return { ...state, isSignedIn: true, userId: action.payload }\n        case SIGN_OUT:\n            return { ...state, isSignedIn: false }\n        default: \n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport authReducers from './authReducers';\n\n\n\nexport default combineReducers({\n    auth: authReducers,\n});","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport App from './components/App/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n\n\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}